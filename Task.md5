Домашнее задание №7 (Helpdesk UI testing)
Before
1.Создать в проекте с домашними заданиями новую ветку без истории коммитов, например ui-master.

git checkout --orphan ИМЯ_ВЕТКИ
2.Удалить ненужные файлы (если есть), и сделать пустой коммит

git commit --allow-empty -m "СООБЩЕНИЕ КОММИТА"
затем выполнить push на удаленный репозиторий.

3.Из текущего состояния создать ветку ui-develop.

4.Скопировать файлы и папки из проекта-шаблона https://gitlab.com/lanit-at-school/homework-examples/helpdesk-ui-test

Задание
Протестировать функционал системы учета заявок HelpDesk, используя веб интерфейс (UI).

Сервис HelpDesk: https://at-sandbox.workbench.lanit.ru/

Документация: https://docs.google.com/document/d/13qUAkmFGj3jV3hEnqMlAxitKblA_BgSTKprwEW-Yg88

Тест-кейс: Создание тикета

Шаги:

-Открыть главную страницу
-Создать тикет
-Выполнить логин (login: admin, pass: adminat)
-Через поиск найти созданный тикет и убедиться, что данные соответствуют введенным ранее
Задачи:

В классе HelpdeskUITest реализовать Шаги в тестовом методе.

Класс Ticket пакета models реализуем по аналогии из домашнего задания с тестированием API, с набором полей, необходимым для заполнения формы создания тикета.

Написать код для классов в пакетах pages и elements, используя паттерн PageObject. Заготовки основных методов уже написаны (помечены to_do).

Заполнить конфигурационные файлы config.properties и user.properties для корректной работы.

Выполнить commit и push, затем создать merge request ветки ui-develop в ветку ui-master. Убедиться, что изменения (diff) соответствуют проделанной работе.

Примечание:

В пакете pages находятся классы отвечающие за работу со страницами:

-AbstractPage - абстрактный класс описывающий базовый шаблон для абсолютно всех страниц, с которыми вы будете работать.
-HelpdeskBasePage - базовый класс для конкретного сайта, в нем описываются элементы присутствующие на всех страницах этого сайта, например меню.
-MainPage - первая страница на которую мы попадаем при заходе на сайт или прохождении тестов. Как и все остальные страницы описывает элементы конкретной страницы и реализует методы взаимодействия с ними.
В пакете elements можно располагать стандартные элементы UI сайта, которые часто встречаются на страницах и/или требуют специальной логики работы с собой (меню, таблицы, карты и тд.).

Требования
Использовать версию Java - 8, если преподаватель не указал иное.

Тестовые данные для создания тикета хранятся в объекте класса Ticket и заполняются в тестовом классе.

Тикет в системе должен создаваться методом createTicket класса CreateTicketPage и принимать как входной параметр объект класса Ticket

Авторизация пользователя должна производится методом login класса LoginPage и получать данные авторизации из конфигурационного файла user.properties

Методы класса TicketPage должны возвращать значения полей тикета для проверки их в тестовом классе HelpdeskUITest

Не использовать сторонние библиотеки, кроме TestNG и Selenium.

Тесты должны проходить без ошибок.

Формат проверок
Выполнить работу в проекте с домашним заданием на gitlab.com (разрешается и github.com).

Каждое домашнее задание должно быть выполнено в соответствующей отдельной ветке.

Для проектов на github: предоставить доступ к проекту для пользователя ilfkrylov, уведомить преподавателя и дождаться подтверждения.
Для проектов на gitlab: предоставить доступ к проекту с ролью Developer для пользователя @ilfkrylov

(Временно недоступно для текущего ДЗ) Готовую работу требуется отправить в систему автопроверки ДЗ: https://autoschool.rnd.lanit.ru/
Учетная запись для просмотра отчета: lanit / lanit

После прохождения тестов проверки, в проекте на gitlab.com (github.com) создать merge request (pull request) для слияния ветки домашнего задания ui-develop с исходной веткой ui-master.

Отправить преподавателю на почту ссылки на:

merge request;
allure отчет.
Не забыть указать ФИО.